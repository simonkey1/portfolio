import streamlit as st
from metric_plot import create_metric_plot

def render_page():
    """
    Renderiza la p√°gina de m√©tricas con tema oscuro y proporci√≥n 4:5.
    """
    # T√≠tulo de la p√°gina
    st.title("üé® M√©tricas con Proporci√≥n 4:5 y Tema Oscuro")

    # Ejemplo de m√©trica 1: Total de D√≠as de Reproducci√≥n
    label1 = "üéß Total de D√≠as de Reproducci√≥n"
    value1 = 326.72

    # Generar y mostrar la m√©trica 1
    filename1 = create_metric_plot(label1, value1, filename="metric_total_days_4_5.png")
    st.image(filename1, caption="M√©trica: Total de D√≠as de Reproducci√≥n")

    # Bot√≥n para descargar la m√©trica 1
    with open(filename1, "rb") as file1:
        st.download_button(
            label="üì• Descargar M√©trica: Total de D√≠as de Reproducci√≥n",
            data=file1,
            file_name="metric_total_days_4_5.png",
            mime="image/png"
        )

    # Ejemplo de m√©trica 2: Total de D√≠as Reproducidos por BTS
    label2 = "üéß Total de D√≠as Reproducidos por BTS"
    value2 = 50.76

    # Generar y mostrar la m√©trica 2
    filename2 = create_metric_plot(label2, value2, filename="metric_bts_days_4_5.png")
    st.image(filename2, caption="M√©trica: Total de D√≠as Reproducidos por BTS")

    # Bot√≥n para descargar la m√©trica 2
    with open(filename2, "rb") as file2:
        st.download_button(
            label="üì• Descargar M√©trica: Total de D√≠as Reproducidos por BTS",
            data=file2,
            file_name="metric_bts_days_4_5.png",
            mime="image/png"
        )

# Nota: Si deseas que esta p√°gina se pueda ejecutar de manera independiente, puedes agregar:
if __name__ == "__main__":
    render_page()
